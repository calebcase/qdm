!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
FUTURE_DAY	main.c	23;"	d	file:
FUTURE_MONTH	main.c	22;"	d	file:
FUTURE_VALUE	main.c	24;"	d	file:
FUTURE_YEAR	main.c	21;"	d	file:
HISTORICAL_DAY	main.c	28;"	d	file:
HISTORICAL_MONTH	main.c	27;"	d	file:
HISTORICAL_OBSERVED	main.c	29;"	d	file:
HISTORICAL_VALUE	main.c	30;"	d	file:
HISTORICAL_YEAR	main.c	26;"	d	file:
MAX_ARG_ERRORS	main.c	19;"	d	file:
PRINT_DOUBLE	config.c	133;"	d	file:
PRINT_DOUBLE	config.c	94;"	d	file:
PRINT_INT	config.c	134;"	d	file:
PRINT_INT	config.c	93;"	d	file:
PRINT_VECTOR	config.c	132;"	d	file:
PRINT_VECTOR	config.c	95;"	d	file:
QDM_DATA_MODEL_NFIELDS	data.c	13;"	d	file:
QDM_THETA_MIN_THRESHOLD	theta.c	11;"	d	file:
READ	config.c	31;"	d	file:
READ	config.c	68;"	d	file:
READ_VECTOR	config.c	37;"	d	file:
READ_VECTOR	config.c	67;"	d	file:
RESET_SIZE	logl.c	11;"	d	file:
RESET_VALUES	logl.c	/^const double RESET_VALUES[RESET_SIZE] = {$/;"	v
TAU_EPS	logl.c	8;"	d	file:
TAU_INITIAL_GUESS	logl.c	7;"	d	file:
TAU_ITERATION_MAX	logl.c	9;"	d	file:
WRITE_DOUBLE	main.c	113;"	d	file:
WRITE_DOUBLE	main.c	143;"	d	file:
WRITE_DOUBLE	main.c	302;"	d	file:
WRITE_DOUBLE	main.c	365;"	d	file:
WRITE_INT	main.c	107;"	d	file:
WRITE_INT	main.c	144;"	d	file:
_GNU_SOURCE	main.c	1;"	d	file:
acc_check	main.c	/^  int acc_check;$/;"	m	struct:__anon1	file:
bias_corrected	main.c	/^  gsl_matrix *bias_corrected;$/;"	m	struct:__anon2	file:
burn	main.c	/^  int burn;$/;"	m	struct:__anon1	file:
create_hd5	gsl.c	/^int create_hd5($/;"	f
dic	main.c	/^  double dic;$/;"	m	struct:__anon2	file:
elapsed	main.c	/^  double elapsed;$/;"	m	struct:__anon2	file:
intermediates	main.c	/^  qdm_intermediate_result *intermediates;$/;"	m	struct:__anon2	file:
intermediates_count	main.c	/^  size_t intermediates_count;$/;"	m	struct:__anon2	file:
ispline_mmm	logl.c	/^ispline_mmm($/;"	f	file:
iter	main.c	/^  int iter;$/;"	m	struct:__anon1	file:
knot	main.c	/^  double knot;$/;"	m	struct:__anon1	file:
knot_try	main.c	/^  int knot_try;$/;"	m	struct:__anon1	file:
m_knots	main.c	/^  gsl_vector *m_knots;$/;"	m	struct:__anon2	file:
main	main.c	/^main(int argc, char **argv)$/;"	f
month	main.c	/^  double month;$/;"	m	struct:__anon1	file:
mspline_mmm	logl.c	/^mspline_mmm($/;"	f	file:
parameters	main.c	/^  qdm_parameters parameters;$/;"	m	struct:__anon2	file:
pd	main.c	/^  double pd;$/;"	m	struct:__anon2	file:
pwaic	main.c	/^  double pwaic;$/;"	m	struct:__anon2	file:
qdm_config_fwrite	config.c	/^qdm_config_fwrite($/;"	f
qdm_config_read	config.c	/^qdm_config_read($/;"	f
qdm_data_create_file	data.c	/^qdm_data_create_file($/;"	f
qdm_data_create_group	data.c	/^qdm_data_create_group($/;"	f
qdm_data_intermediate_free	data.c	/^qdm_data_intermediate_free($/;"	f
qdm_data_intermediate_result_write	data.c	/^qdm_data_intermediate_result_write($/;"	f
qdm_data_model_read	data.c	/^qdm_data_model_read($/;"	f
qdm_data_model_select_by_month	data.c	/^qdm_data_model_select_by_month($/;"	f
qdm_data_model_selected	data.c	/^qdm_data_model_selected($/;"	f
qdm_data_model_value_vector	data.c	/^qdm_data_model_value_vector($/;"	f
qdm_data_model_year_vector	data.c	/^qdm_data_model_year_vector($/;"	f
qdm_double_write	main.c	/^qdm_double_write($/;"	f
qdm_evaluation	main.c	/^} qdm_evaluation;$/;"	t	typeref:struct:__anon2	file:
qdm_evaluation_fprint	main.c	/^qdm_evaluation_fprint($/;"	f
qdm_evaluation_free	main.c	/^qdm_evaluation_free(qdm_evaluation *e)$/;"	f
qdm_evaluation_new	main.c	/^qdm_evaluation_new(const qdm_parameters *parameters)$/;"	f
qdm_evaluation_run	main.c	/^qdm_evaluation_run($/;"	f
qdm_evaluation_write	main.c	/^qdm_evaluation_write($/;"	f
qdm_find_tau	logl.c	/^qdm_find_tau($/;"	f
qdm_int_write	main.c	/^qdm_int_write($/;"	f
qdm_ispline_matrix	ispline.c	/^qdm_ispline_matrix($/;"	f
qdm_ispline_vector	ispline.c	/^qdm_ispline_vector($/;"	f
qdm_knots_optimize	knots.c	/^qdm_knots_optimize($/;"	f
qdm_knots_rss	knots.c	/^qdm_knots_rss($/;"	f
qdm_knots_vector	knots.c	/^qdm_knots_vector(size_t spline_df, gsl_vector *interior_knots)$/;"	f
qdm_logl	logl.c	/^qdm_logl($/;"	f
qdm_logl_2	logl.c	/^qdm_logl_2($/;"	f
qdm_matrix_copy	gsl.c	/^qdm_matrix_copy(const gsl_matrix *src)$/;"	f
qdm_matrix_csv_fwrite	gsl.c	/^qdm_matrix_csv_fwrite(FILE *f, gsl_matrix *m)$/;"	f
qdm_matrix_det_tmm	gsl.c	/^qdm_matrix_det_tmm(gsl_matrix *m, double *det)$/;"	f
qdm_matrix_filter	gsl.c	/^qdm_matrix_filter($/;"	f
qdm_matrix_hd5_read	gsl.c	/^qdm_matrix_hd5_read($/;"	f
qdm_matrix_hd5_write	gsl.c	/^qdm_matrix_hd5_write($/;"	f
qdm_matrix_select_upper_triangle	gsl.c	/^qdm_matrix_select_upper_triangle(gsl_matrix *m)$/;"	f
qdm_matrix_tmm	gsl.c	/^qdm_matrix_tmm(gsl_matrix *m, gsl_matrix *result)$/;"	f
qdm_matrix_to_csc_matrix	gsl.c	/^qdm_matrix_to_csc_matrix(csc **result, gsl_matrix *input)$/;"	f
qdm_mspline_matrix	mspline.c	/^qdm_mspline_matrix(gsl_matrix *result, const size_t spline_df, const gsl_vector *x, const gsl_vector *knots)$/;"	f
qdm_mspline_vector	mspline.c	/^qdm_mspline_vector(gsl_vector *result, const double tau, const size_t spline_df, const gsl_vector *knots)$/;"	f
qdm_parameters	main.c	/^} qdm_parameters;$/;"	t	typeref:struct:__anon1	file:
qdm_parameters_fprint	main.c	/^qdm_parameters_fprint($/;"	f
qdm_parameters_write	main.c	/^qdm_parameters_write($/;"	f
qdm_state	state.c	/^qdm_state_t *qdm_state;$/;"	v
qdm_state_init	state.c	/^qdm_state_init()$/;"	f	file:
qdm_theta_matrix_constrain	theta.c	/^qdm_theta_matrix_constrain($/;"	f
qdm_theta_optimize	theta.c	/^qdm_theta_optimize($/;"	f
qdm_vector_copy	gsl.c	/^qdm_vector_copy(const gsl_vector *src)$/;"	f
qdm_vector_csv_fread	gsl.c	/^qdm_vector_csv_fread(FILE *stream)$/;"	f
qdm_vector_csv_fwrite	gsl.c	/^qdm_vector_csv_fwrite(FILE *f, gsl_vector *v)$/;"	f
qdm_vector_greater_than	gsl.c	/^qdm_vector_greater_than(const gsl_vector *v, double value)$/;"	f
qdm_vector_hd5_read	gsl.c	/^qdm_vector_hd5_read($/;"	f
qdm_vector_hd5_write	gsl.c	/^qdm_vector_hd5_write($/;"	f
qdm_vector_quantile	gsl.c	/^qdm_vector_quantile(gsl_vector *data, gsl_vector *probs)$/;"	f
qdm_vector_rss	gsl.c	/^qdm_vector_rss(const gsl_vector *y, const gsl_vector *fx)$/;"	f
qdm_vector_search	gsl.c	/^qdm_vector_search(const gsl_vector *v, double needle)$/;"	f
qdm_vector_seq	gsl.c	/^qdm_vector_seq(double from, double to, double by)$/;"	f
qdm_vector_sorted	gsl.c	/^qdm_vector_sorted(const gsl_vector *v)$/;"	f
qdm_vector_sum	gsl.c	/^qdm_vector_sum(gsl_vector *v)$/;"	f
rng_seed	main.c	/^  int rng_seed;$/;"	m	struct:__anon1	file:
spline_df	main.c	/^  int spline_df;$/;"	m	struct:__anon1	file:
tau_high	main.c	/^  double tau_high;$/;"	m	struct:__anon1	file:
tau_low	main.c	/^  double tau_low;$/;"	m	struct:__anon1	file:
theta_acc	main.c	/^  gsl_matrix *theta_acc;$/;"	m	struct:__anon2	file:
theta_bar	main.c	/^  gsl_matrix *theta_bar;$/;"	m	struct:__anon2	file:
theta_min	main.c	/^  double theta_min;$/;"	m	struct:__anon1	file:
theta_tune_sd	main.c	/^  double theta_tune_sd;$/;"	m	struct:__anon1	file:
thin	main.c	/^  int thin;$/;"	m	struct:__anon1	file:
waic	main.c	/^  double waic;$/;"	m	struct:__anon2	file:
xi_acc	main.c	/^  gsl_vector *xi_acc;$/;"	m	struct:__anon2	file:
xi_high	main.c	/^  double xi_high;$/;"	m	struct:__anon1	file:
xi_high_bar	main.c	/^  double xi_high_bar;$/;"	m	struct:__anon2	file:
xi_low	main.c	/^  double xi_low;$/;"	m	struct:__anon1	file:
xi_low_bar	main.c	/^  double xi_low_bar;$/;"	m	struct:__anon2	file:
xi_prior_mean	main.c	/^  double xi_prior_mean;$/;"	m	struct:__anon1	file:
xi_prior_var	main.c	/^  double xi_prior_var;$/;"	m	struct:__anon1	file:
xi_tune_sd	main.c	/^  double xi_tune_sd;$/;"	m	struct:__anon1	file:
years_max	main.c	/^  double years_max;$/;"	m	struct:__anon2	file:
years_min	main.c	/^  double years_min;$/;"	m	struct:__anon2	file:
